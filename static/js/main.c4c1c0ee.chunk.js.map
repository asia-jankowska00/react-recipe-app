{"version":3,"sources":["components/Header.js","contexts/SearchQueryContext.js","components/DropdownItem.js","components/Dropdown.js","components/Form.js","contexts/CredentialsContext.js","contexts/FavoritesContext.js","components/Recipe.js","components/Recipes.js","components/Search.js","components/OpenRecipe.js","components/Favorites.js","App.js","index.js"],"names":["Header","className","to","icon","faUtensils","SearchQueryContext","createContext","SearchQueryContextProvider","props","useState","recipes","setRecipes","query","setQuery","queryOptions","setQueryOptions","parameter","title","type","dietaryOptions","setDietaryOptions","selectedProperties","setSelectedProperties","buildQueryString","string","forEach","property","console","log","useEffect","getRecipes","a","fetch","res","json","data","hits","Provider","value","doSearch","e","preventDefault","getSearchQuery","target","children","DropdownItem","useContext","updateSelected","includes","option","deleteSelected","addSelected","dropdownLabel","setDropdownLabel","filter","item","onClick","onChange","checked","Dropdown","isOpen","setOpen","node","useRef","document","addEventListener","handleClick","removeEventListener","current","contains","ref","length","toString","substring","faCaretDown","map","key","Form","placeholder","onInput","CredentialsContext","CredentialsContextProvider","APP_ID","APP_KEY","FavoritesContext","FavoritesContextProvider","favorites","setFavorites","favoriteRecipes","setFavoriteRecipes","message","setMessage","heart","setHeart","addFavorite","id","fasHeart","deleteFavorite","favorite","farHeart","getFavoriteRecipes","favoritesQuery","ok","doFavoriteSearch","updateFavorites","Recipe","recipe","parsedUri","uri","split","localStorage","setItem","JSON","stringify","src","image","alt","label","href","url","source","faExternalLinkAlt","faArrowRight","Recipes","Search","OpenRecipe","match","openRecipe","setOpenRecipe","parsedLabels","setParsedLabels","parsedIngredientLines","setParsedIngredientLines","getOpenRecipe","recipeQuery","params","parseHealthLabels","i","healthLabels","arr","ingredientLines","push","parseIngredientLines","history","useHistory","goBack","faChevronCircleLeft","Math","floor","calories","totalWeight","ingredient","Favorites","App","favs","parse","getItem","path","component","exact","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.c4c1c0ee.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUtensils } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"flex bg-blue-900 text-white p-4 px-10 md:px-12 xl:px-20 justify-between\">\r\n      <div>\r\n        <Link to=\"/\" className=\"\">\r\n          <h1 className=\" text-4xl font-semibold Merriweather-700r\">\r\n            <FontAwesomeIcon\r\n              icon={faUtensils}\r\n              className=\"inline transform hover:scale-110\"\r\n            />\r\n            <p className=\"hidden ml-8 sm:inline transform hover:scale-110\">\r\n              it just forks!\r\n            </p>\r\n          </h1>\r\n        </Link>\r\n        <p className=\" hidden md:inline text-center\">\r\n          Find culinary inspiration and enhance your diet\r\n        </p>\r\n      </div>\r\n\r\n      <nav className=\"flex \">\r\n        <Link\r\n          to=\"/\"\r\n          className=\"flex align-middle text-white Merriweather-400 px-4 py-2 hover:underline transform hover:scale-110\"\r\n        >\r\n          <button>Search recipes</button>\r\n        </Link>\r\n        <Link\r\n          to=\"/favorites\"\r\n          className=\"flex align-middle text-white Merriweather-400 px-4 py-2 hover:underline transform hover:scale-110\"\r\n        >\r\n          <button>Favorites</button>\r\n        </Link>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const SearchQueryContext = createContext();\r\n\r\nconst SearchQueryContextProvider = (props) => {\r\n  const APP_KEY = \"d2cf812100729746a80f302c5ecd16f2\";\r\n  const APP_ID = \"560a76dc\";\r\n\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const [queryOptions, setQueryOptions] = useState(\"\");\r\n\r\n  const [dietaryOptions, setDietaryOptions] = useState([\r\n    // {\r\n    //   parameter: \"gluten-free\",\r\n    //   title: \"Gluten-free\",\r\n    //   type: \"health\",\r\n    // },\r\n    // {\r\n    //   parameter: \"keto-friendly\",\r\n    //   title: \"Keto-friendly\",\r\n    //   type: \"health\",\r\n    // },\r\n    // {\r\n    //   parameter: \"paleo\",\r\n    //   title: \"Paleo\",\r\n    //   type: \"health\",\r\n    // },\r\n    {\r\n      parameter: \"vegan\",\r\n      title: \"Vegan\",\r\n      type: \"health\",\r\n    },\r\n    {\r\n      parameter: \"vegetarian\",\r\n      title: \"Vegetarian\",\r\n      type: \"health\",\r\n    },\r\n    {\r\n      parameter: \"low-carb\",\r\n      title: \"Low-carb\",\r\n      type: \"diet\",\r\n    },\r\n    {\r\n      parameter: \"low-fat\",\r\n      title: \"Low-fat\",\r\n      type: \"diet\",\r\n    },\r\n    // {\r\n    //   parameter: \"low-sodium\",\r\n    //   title: \"Low-sodium\",\r\n    //   type: \"diet\",\r\n    // },\r\n    // {\r\n    //   parameter: \"low-sugar\",\r\n    //   title: \"Low-sugar\",\r\n    //   type: \"health\",\r\n    // },\r\n  ]);\r\n\r\n  const [selectedProperties, setSelectedProperties] = useState([]);\r\n\r\n  const doSearch = (e) => {\r\n    e.preventDefault();\r\n    getRecipes();\r\n  };\r\n\r\n  const buildQueryString = () => {\r\n    let string = \"\";\r\n    // if (selectedProperties.length !== 0) {\r\n    selectedProperties.forEach((property) => {\r\n      string += `&${property.type}=${property.parameter}`;\r\n      // setQueryOptions(\r\n      //   (queryOptions += `&${property.type}=${property.parameter}`)\r\n      // );\r\n    });\r\n    // setQueryOptions(string, [\r\n    //   () => {\r\n    //     return true;\r\n    //   },\r\n    // ]);\r\n    // console.log(string);\r\n    // }\r\n    setQueryOptions(string);\r\n    console.log(string);\r\n  };\r\n\r\n  useEffect(buildQueryString, [selectedProperties]);\r\n\r\n  const getRecipes = async () => {\r\n    if (query !== \"\") {\r\n      const res = await fetch(\r\n        `https://api.edamam.com/search?q=${query}${queryOptions}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=50`\r\n      );\r\n      console.log(queryOptions);\r\n      const data = await res.json();\r\n      console.log(data);\r\n      setRecipes(data.hits);\r\n    }\r\n  };\r\n\r\n  const getSearchQuery = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <SearchQueryContext.Provider\r\n      value={{\r\n        dietaryOptions,\r\n        setDietaryOptions,\r\n        selectedProperties,\r\n        setSelectedProperties,\r\n        recipes,\r\n        setRecipes,\r\n        getRecipes,\r\n        doSearch,\r\n        getSearchQuery,\r\n        buildQueryString,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </SearchQueryContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SearchQueryContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { SearchQueryContext } from \"../contexts/SearchQueryContext\";\r\n\r\nconst DropdownItem = (props) => {\r\n  const { selectedProperties, setSelectedProperties } = useContext(\r\n    SearchQueryContext\r\n  );\r\n  const updateSelected = () => {\r\n    selectedProperties.includes(props.option)\r\n      ? deleteSelected()\r\n      : addSelected();\r\n    props.dropdownLabel.includes(props.option.title)\r\n      ? props.setDropdownLabel([\r\n          ...props.dropdownLabel.filter((item) => item !== props.option.title),\r\n        ])\r\n      : props.setDropdownLabel([...props.dropdownLabel, props.option.title]);\r\n    // props.setDropdownLabel(`${props.dropdownLabel} ${props.title}`);\r\n  };\r\n\r\n  const addSelected = () => {\r\n    setSelectedProperties([...selectedProperties, props.option]);\r\n  };\r\n\r\n  const deleteSelected = () => {\r\n    setSelectedProperties([\r\n      ...selectedProperties.filter((item) => item !== props.option),\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <li\r\n      onClick={updateSelected}\r\n      parameter={props.option.parameter}\r\n      className=\"cursor-pointer hover:bg-gray-200 px-4 py-2\"\r\n    >\r\n      <input\r\n        type=\"checkbox\"\r\n        onChange={updateSelected}\r\n        checked={selectedProperties.includes(props.option) ? true : false}\r\n      />\r\n      <p className=\"inline ml-2\">{props.option.title}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DropdownItem;\r\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCaretDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DropdownItem from \"./DropdownItem\";\r\nimport { SearchQueryContext } from \"../contexts/SearchQueryContext\";\r\n\r\nconst Dropdown = () => {\r\n  const [isOpen, setOpen] = useState(false);\r\n  const { dietaryOptions, selectedProperties } = useContext(SearchQueryContext);\r\n\r\n  const [dropdownLabel, setDropdownLabel] = useState([]);\r\n\r\n  // detect click outside dropdown\r\n  const node = useRef();\r\n  useEffect(() => {\r\n    // add when mounted\r\n    document.addEventListener(\"mousedown\", handleClick);\r\n    // return function to be called when unmounted\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClick);\r\n    };\r\n  }, []);\r\n\r\n  const handleClick = (e) => {\r\n    if (node.current.contains(e.target)) {\r\n      // inside click\r\n      return;\r\n    }\r\n    // outside click\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDropdown = () => {\r\n    setOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div ref={node} className=\"relative w-full md:w-3/12\">\r\n      <div\r\n        onClick={handleDropdown}\r\n        className=\"flex justify-between align-center bg-white border border-gray-400 shadow-inner px-4 py-2\"\r\n      >\r\n        <p className=\"inline-block self-center\">\r\n          {selectedProperties.length === 0\r\n            ? \"Diet preferences\"\r\n            : dropdownLabel.toString().substring(0, 20) + \"...\"}\r\n        </p>\r\n        <FontAwesomeIcon\r\n          icon={faCaretDown}\r\n          className=\"ml-4 inline-block self-center\"\r\n        />\r\n      </div>\r\n      <ul\r\n        className={\r\n          isOpen === true\r\n            ? \"block w-full absolute z-10 bg-white border border-gray-400 shadow-inner\"\r\n            : \"hidden w-full bg-white border border-gray-400 shadow-inner\"\r\n        }\r\n      >\r\n        {dietaryOptions.map((option) => {\r\n          return (\r\n            <DropdownItem\r\n              key={option.parameter}\r\n              dropdownLabel={dropdownLabel}\r\n              setDropdownLabel={setDropdownLabel}\r\n              option={option}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { useContext } from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport { SearchQueryContext } from \"../contexts/SearchQueryContext\";\r\n\r\nconst Form = () => {\r\n  const { getSearchQuery, doSearch } = useContext(SearchQueryContext);\r\n\r\n  return (\r\n    <div className=\"flex justify-around h-64 md:h-auto py-8\">\r\n      <form className=\"flex flex-col w-5/6 md:flex-row md:w-11/12 xl:w-3/4 justify-between items-start relative text-gray-700\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search recipes...\"\r\n          onInput={getSearchQuery}\r\n          className=\"w-full md:w-5/12 border border-gray-400 shadow-inner px-4 py-2\"\r\n        />\r\n        <Dropdown />\r\n        <button\r\n          onClick={doSearch}\r\n          className=\"w-full md:w-3/12 bg-blue-900 text-white Merriweather-400 shadow px-4 py-2 transform hover:scale-110\"\r\n        >\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { createContext } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\nexport const CredentialsContext = createContext();\r\n\r\nconst CredentialsContextProvider = (props) => {\r\n  const APP_KEY = \"d2cf812100729746a80f302c5ecd16f2\";\r\n  const APP_ID = \"560a76dc\";\r\n\r\n  // const history = useHistory();\r\n\r\n  return (\r\n    <CredentialsContext.Provider value={{ APP_ID, APP_KEY }}>\r\n      {props.children}\r\n    </CredentialsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CredentialsContextProvider;\r\n","import React, { createContext, useState, useContext } from \"react\";\r\nimport { CredentialsContext } from \"../contexts/CredentialsContext\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart as fasHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as farHeart } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nexport const FavoritesContext = createContext();\r\n\r\nconst FavoritesContextProvider = (props) => {\r\n  const { APP_KEY, APP_ID } = useContext(CredentialsContext);\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [favoriteRecipes, setFavoriteRecipes] = useState([]);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [heart, setHeart] = useState();\r\n\r\n  const updateFavorites = (id) => {\r\n    console.log(id);\r\n    favorites.includes(id) ? deleteFavorite(id) : addFavorite(id);\r\n  };\r\n\r\n  const addFavorite = (id) => {\r\n    setFavorites([...favorites, id]);\r\n    setMessage(\"Remove favorite\");\r\n    setHeart(fasHeart);\r\n  };\r\n\r\n  const deleteFavorite = (id) => {\r\n    setFavorites([...favorites.filter((favorite) => favorite !== id)]);\r\n    setMessage(\"Add favorite\");\r\n    setHeart(farHeart);\r\n  };\r\n\r\n  const doFavoriteSearch = (e) => {\r\n    e.preventDefault();\r\n    getFavoriteRecipes();\r\n  };\r\n\r\n  const getFavoriteRecipes = async () => {\r\n    if (favorites.length !== 0) {\r\n      let favoritesQuery = \"\";\r\n      favorites.forEach(\r\n        (favorite) =>\r\n          (favoritesQuery += `&r=http%3A%2F%2Fwww.edamam.com%2Fontologies%2Fedamam.owl%23recipe_${favorite}`)\r\n      );\r\n      const res = await fetch(\r\n        `https://api.edamam.com/search?${favoritesQuery}&app_id=${APP_ID}&app_key=${APP_KEY}`\r\n      );\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        console.log(data);\r\n        setFavoriteRecipes(data);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <FavoritesContext.Provider\r\n      value={{\r\n        favorites,\r\n        setFavorites,\r\n        favoriteRecipes,\r\n        setFavoriteRecipes,\r\n        doFavoriteSearch,\r\n        getFavoriteRecipes,\r\n        updateFavorites,\r\n        addFavorite,\r\n        deleteFavorite,\r\n        message,\r\n        setMessage,\r\n        heart,\r\n        setHeart,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FavoritesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FavoritesContextProvider;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart as fasHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as farHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FavoritesContext } from \"../contexts/FavoritesContext\";\r\n\r\nconst Recipe = (props) => {\r\n  const recipe = props.recipe.recipe || props.recipe;\r\n  const parsedUri = recipe.uri.split(\"_\")[1];\r\n\r\n  const { favorites, updateFavorites } = useContext(FavoritesContext);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"favorites\", JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col bg-white shadow p-4 xl:w-3/12 lg:w-1/3 md:w-1/2 sm:w-3/4 w-full mx-6 mt-6\">\r\n      <img src={recipe.image} alt=\"recipe\" className=\"object-contain w-full\" />\r\n      <h2 className=\"text-orange-600 text-2xl font-bold my-6\">\r\n        {recipe.label.length < 20\r\n          ? recipe.label\r\n          : recipe.label.substring(0, 20) + \"...\"}\r\n      </h2>\r\n      <p className=\"text-gray-500\">\r\n        Source:{\" \"}\r\n        <a href={recipe.url} className=\"underline\">\r\n          {recipe.source} <FontAwesomeIcon icon={faExternalLinkAlt} />\r\n        </a>\r\n      </p>\r\n      <div className=\"flex justify-between mt-8\">\r\n        <Link to={`/recipe/${parsedUri}`}>\r\n          <button className=\"flex w-full justify-left p-4 bg-blue-900 text-white\">\r\n            <p className=\"inline self-center\">View recipe info</p>\r\n            <FontAwesomeIcon\r\n              icon={faArrowRight}\r\n              className=\"ml-4  self-center\"\r\n            />\r\n          </button>\r\n        </Link>\r\n        <button\r\n          onClick={() => {\r\n            updateFavorites(parsedUri);\r\n          }}\r\n          className=\"flex w-1/3 justify-right text-orange-600\"\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={favorites.includes(parsedUri) ? fasHeart : farHeart}\r\n            className=\"mt-1 mr-4 text-2xl inline-block self-center\"\r\n          />\r\n          <p className=\"w-3/5 inline self-center\">\r\n            {favorites.includes(parsedUri) ? \"Remove favorite\" : \"Add favorite\"}\r\n          </p>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useContext } from \"react\";\r\nimport Recipe from \"./Recipe\";\r\nimport { SearchQueryContext } from \"../contexts/SearchQueryContext\";\r\n\r\nconst Recipes = () => {\r\n  const { recipes } = useContext(SearchQueryContext);\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap justify-center\">\r\n      {recipes.map((recipe) => {\r\n        return <Recipe recipe={recipe} key={recipe.recipe.uri.split(\"_\")[1]} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipes;\r\n","import React from \"react\";\r\nimport Form from \"./Form\";\r\nimport Recipes from \"./Recipes\";\r\n\r\nconst Search = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-gray-700 text-4xl font-semibold Merriweather-700 text-center py-4\">\r\n        Search recipes\r\n      </h1>\r\n      <hr></hr>\r\n      <Form />\r\n      <hr></hr>\r\n      <Recipes />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CredentialsContext } from \"../contexts/CredentialsContext\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart as fasHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faHeart as farHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FavoritesContext } from \"../contexts/FavoritesContext\";\r\n\r\nconst OpenRecipe = ({ match }) => {\r\n  const { APP_KEY, APP_ID } = useContext(CredentialsContext);\r\n  const { favorites, updateFavorites } = useContext(FavoritesContext);\r\n  const [openRecipe, setOpenRecipe] = useState({});\r\n  const [parsedLabels, setParsedLabels] = useState(\"\");\r\n  const [parsedIngredientLines, setParsedIngredientLines] = useState([]);\r\n\r\n  const getOpenRecipe = async () => {\r\n    const recipeQuery = `&r=http%3A%2F%2Fwww.edamam.com%2Fontologies%2Fedamam.owl%23recipe_${match.params.id}`;\r\n    const res = await fetch(\r\n      `https://api.edamam.com/search?id=${recipeQuery}&app_id=${APP_ID}&app_key=${APP_KEY}`\r\n    );\r\n    if (res.ok) {\r\n      const data = await res.json();\r\n      console.log(data[0]);\r\n      setOpenRecipe(data[0]);\r\n      parseHealthLabels();\r\n    }\r\n  };\r\n\r\n  const parseHealthLabels = () => {\r\n    let i,\r\n      string = \"\";\r\n    for (i in openRecipe.healthLabels) {\r\n      string += `${openRecipe.healthLabels[i]}; `;\r\n    }\r\n    setParsedLabels(string);\r\n  };\r\n\r\n  const parseIngredientLines = () => {\r\n    let i,\r\n      arr = [];\r\n    for (i in openRecipe.ingredientLines) {\r\n      arr.push(openRecipe.ingredientLines[i]);\r\n    }\r\n    setParsedIngredientLines(arr);\r\n  };\r\n\r\n  useEffect(() => {\r\n    parseHealthLabels();\r\n    parseIngredientLines();\r\n  }, [openRecipe]);\r\n\r\n  useEffect(() => {\r\n    getOpenRecipe();\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"text-gray-500 flex flex-col items-center justify-center relative \">\r\n      <div\r\n        onClick={history.goBack}\r\n        className=\"cursor-pointer flex items-center text-orange-600 p-4\"\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={faChevronCircleLeft}\r\n          className=\"mr-4 text-2xl bg-white rounded-full inline-block self-center\"\r\n        />\r\n        Back\r\n      </div>\r\n\r\n      <div className=\"flex flex-col bg-white shadow p-8 w-1/2 mx-6 mb-6\">\r\n        <img\r\n          src={openRecipe.image}\r\n          alt=\"recipe\"\r\n          className=\"object-cover h-full\"\r\n        />\r\n\r\n        <div className=\"flex justify-between py-8 items-center\">\r\n          <h2 className=\"text-orange-600 w-2/3 text-3xl font-bold\">\r\n            {openRecipe.label}\r\n          </h2>\r\n\r\n          <div className=\"flex w-1/3 justify-left\">\r\n            <button\r\n              onClick={() => {\r\n                updateFavorites(match.params.id);\r\n              }}\r\n              className=\"flex w-full justify-center text-orange-600\"\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={favorites.includes(match.params.id) ? fasHeart : farHeart}\r\n                className=\"mt-1 mr-4 text-2xl inline-block self-center\"\r\n              />\r\n              <p className=\"inline text-left self-center\">\r\n                {favorites.includes(match.params.id)\r\n                  ? \"Remove favorite\"\r\n                  : \"Add favorite\"}\r\n              </p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <hr></hr>\r\n\r\n        <div className=\"py-4\">\r\n          <p className=\"text-gray-700 py-2 text-xl\">\r\n            Source:{\" \"}\r\n            <a href={openRecipe.url} className=\"underline\">\r\n              {openRecipe.source} <FontAwesomeIcon icon={faExternalLinkAlt} />\r\n            </a>\r\n          </p>\r\n\r\n          <p className=\"py-2\">{parsedLabels}</p>\r\n\r\n          <div className=\"py-2\">\r\n            Calories per 100g:{\" \"}\r\n            <p className=\"inline text-gray-700\">\r\n              {Math.floor(\r\n                (openRecipe.calories / openRecipe.totalWeight) * 100\r\n              ).toString() + \" kcal\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <hr></hr>\r\n\r\n        <div className=\"py-4\">\r\n          <h3 className=\"py-2 text-gray-700 text-xl\">Ingredients:</h3>\r\n          <ul className=\"py-2 text-gray-600\">\r\n            {parsedIngredientLines.map((ingredient) => (\r\n              <li key={ingredient} className=\"mx-4 py-2 list-disc\">\r\n                {ingredient}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <hr></hr>\r\n\r\n        <h1 className=\"py-2\">Recipe ID: {match.params.id}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenRecipe;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { FavoritesContext } from \"../contexts/FavoritesContext\";\r\nimport Recipe from \"./Recipe\";\r\n\r\nconst Favorites = () => {\r\n  const { favorites, getFavoriteRecipes, favoriteRecipes } = useContext(\r\n    FavoritesContext\r\n  );\r\n\r\n  useEffect(() => {\r\n    getFavoriteRecipes();\r\n  }, [favorites]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-gray-700 text-4xl font-semibold Merriweather-700 text-center py-4\">\r\n        Favorites\r\n      </h1>\r\n      <hr></hr>\r\n\r\n      <div className=\"flex flex-wrap justify-center\">\r\n        {favoriteRecipes.map((favorite) => {\r\n          return <Recipe key={favorite.uri.split(\"_\")[1]} recipe={favorite} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Search from \"./components/Search\";\r\nimport OpenRecipe from \"./components/OpenRecipe\";\r\nimport Favorites from \"./components/Favorites\";\r\n\r\nimport { FavoritesContext } from \"./contexts/FavoritesContext\";\r\n\r\nfunction App() {\r\n  const { setFavorites } = useContext(FavoritesContext);\r\n\r\n  useEffect(() => {\r\n    let favs = JSON.parse(localStorage.getItem(\"favorites\"));\r\n    if (favs != null) {\r\n      setFavorites(favs);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mb-8\">\r\n      <Header />\r\n      <Route path=\"/recipe/:id\" component={OpenRecipe} />\r\n      <Route path=\"/\" exact component={Search} />\r\n      <Route path=\"/favorites\" component={Favorites} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport \"./tailwindcss/tailwind.css\";\r\nimport App from \"./App\";\r\nimport FavoritesContextProvider from \"./contexts/FavoritesContext\";\r\nimport CredentialsContextProvider from \"./contexts/CredentialsContext\";\r\nimport SearchQueryContextProvider from \"./contexts/SearchQueryContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CredentialsContextProvider>\r\n      <SearchQueryContextProvider>\r\n        <FavoritesContextProvider>\r\n          <Router basename={process.env.PUBLIC_URL}>\r\n            <App />\r\n          </Router>\r\n        </FavoritesContextProvider>\r\n      </SearchQueryContextProvider>\r\n    </CredentialsContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}